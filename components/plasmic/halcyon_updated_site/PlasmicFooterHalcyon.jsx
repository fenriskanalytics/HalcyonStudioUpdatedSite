// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: q72kFJDPbi6GCvfvYJFAr
// Component: bbtps6nNPDXa
import * as React from "react";
import { useRouter } from "next/router";
import {
  PlasmicImg as PlasmicImg__,
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateStateOnChangeProp,
  generateStateValueProp,
  useDollarState
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import { AntdButton } from "@plasmicpkgs/antd5/skinny/registerButton";
import { AntdModal } from "@plasmicpkgs/antd5/skinny/registerModal";
import { Embed } from "@plasmicpkgs/plasmic-basic-components";
import LinkHalcyon from "../../LinkHalcyon"; // plasmic-import: LUgzpn1W7K_f/component
import { useScreenVariants as useScreenVariantswN0X0O3Pyupg } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: wN0X0o3PYUPG/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: q72kFJDPbi6GCvfvYJFAr/projectcss
import sty from "./PlasmicFooterHalcyon.module.css"; // plasmic-import: bbtps6nNPDXa/css
import Instagram1SvgrepoComSvgIcon from "./icons/PlasmicIcon__Instagram1SvgrepoComSvg"; // plasmic-import: 9SrnwV0vLHn5/icon
import TiktokLogoLogoSvgrepoComSvgIcon from "./icons/PlasmicIcon__TiktokLogoLogoSvgrepoComSvg"; // plasmic-import: qotX-DNfbN_1/icon
import PinterestSvgrepoComSvg2Icon from "./icons/PlasmicIcon__PinterestSvgrepoComSvg2"; // plasmic-import: Z1LXLo4bKHeY/icon
import LogoSvgIcon from "./icons/PlasmicIcon__LogoSvg"; // plasmic-import: XR0o_14XqZWZ/icon

createPlasmicElementProxy;

export const PlasmicFooterHalcyon__VariantProps = new Array();

export const PlasmicFooterHalcyon__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicFooterHalcyon__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "modal.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      }
    ],

    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantswN0X0O3Pyupg()
  });
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        sty.root
      )}
    >
      <div
        data-plasmic-name={"footerTop"}
        data-plasmic-override={overrides.footerTop}
        className={classNames(projectcss.all, sty.footerTop)}
      >
        <div
          data-plasmic-name={"container"}
          data-plasmic-override={overrides.container}
          className={classNames(projectcss.all, sty.container)}
        >
          <div className={classNames(projectcss.all, sty.columns___1EbZk)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.column__eDn6F)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__urShb
                )}
              >
                {"Halcyon Studios"}
              </div>
              <AntdButton
                data-plasmic-name={"button"}
                data-plasmic-override={overrides.button}
                className={classNames("__wab_instance", sty.button)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__r0CV
                  )}
                >
                  {"2305 W Morrison Ave\nTampa, FL 33609"}
                </div>
              </AntdButton>
              <div className={classNames(projectcss.all, sty.freeBox__kr1Nb)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___4T33C
                  )}
                >
                  {"EMAIL"}
                </div>
                <div
                  data-plasmic-name={"emailAddressText"}
                  data-plasmic-override={overrides.emailAddressText}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.emailAddressText
                  )}
                >
                  {"Info@HalcyonStudio.us"}
                </div>
                <AntdModal
                  data-plasmic-name={"modal"}
                  data-plasmic-override={overrides.modal}
                  className={classNames("__wab_instance", sty.modal)}
                  defaultStylesClassName={classNames(
                    projectcss.root_reset,
                    projectcss.plasmic_default_styles,
                    projectcss.plasmic_mixins,
                    projectcss.plasmic_tokens,
                    plasmic_antd_5_hostless_css.plasmic_tokens
                  )}
                  modalScopeClassName={sty["modal__modal"]}
                  onOpenChange={async (...eventArgs) => {
                    generateStateOnChangeProp($state, ["modal", "open"]).apply(
                      null,
                      eventArgs
                    );
                  }}
                  open={generateStateValueProp($state, ["modal", "open"])}
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___9Kgs9
                      )}
                    >
                      {"Halcyon Studios"}
                    </div>
                  }
                  trigger={null}
                  width={"650"}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__lVbUh)}
                  >
                    <Embed
                      data-plasmic-name={"embedHtml"}
                      data-plasmic-override={overrides.embedHtml}
                      className={classNames("__wab_instance", sty.embedHtml)}
                      code={
                        '<iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3524.9592825997906!2d-82.48591732531897!3d27.933893476053484!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x88c2c30f3960f8cf%3A0x2bebf5a2a4db0690!2sHalcyon%20Studio!5e0!3m2!1sen!2sus!4v1713144134165!5m2!1sen!2sus" width="600" height="450" style="border:0;" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe>'
                      }
                    />
                  </div>
                </AntdModal>
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__u4By0
                )}
              >
                {"FOLLOW US"}
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__j30LA)}
              >
                <Instagram1SvgrepoComSvgIcon
                  data-plasmic-name={"instagramIcon"}
                  data-plasmic-override={overrides.instagramIcon}
                  className={classNames(projectcss.all, sty.instagramIcon)}
                  role={"img"}
                />

                <TiktokLogoLogoSvgrepoComSvgIcon
                  data-plasmic-name={"pinterestIcon2"}
                  data-plasmic-override={overrides.pinterestIcon2}
                  className={classNames(projectcss.all, sty.pinterestIcon2)}
                  role={"img"}
                />

                <PinterestSvgrepoComSvg2Icon
                  data-plasmic-name={"pinterestIcon"}
                  data-plasmic-override={overrides.pinterestIcon}
                  className={classNames(projectcss.all, sty.pinterestIcon)}
                  role={"img"}
                />

                <LogoSvgIcon
                  data-plasmic-name={"twitterIcon"}
                  data-plasmic-override={overrides.twitterIcon}
                  className={classNames(projectcss.all, sty.twitterIcon)}
                  role={"img"}
                />
              </Stack__>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.column__rlWon)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__xqh3L
                )}
              >
                {"Menu"}
              </div>
              <LinkHalcyon
                data-plasmic-name={"linkHome"}
                data-plasmic-override={overrides.linkHome}
                className={classNames("__wab_instance", sty.linkHome)}
              />

              <LinkHalcyon
                data-plasmic-name={"linkMemberships"}
                data-plasmic-override={overrides.linkMemberships}
                className={classNames("__wab_instance", sty.linkMemberships)}
                memberships={true}
              />

              <LinkHalcyon
                data-plasmic-name={"linkSchedule"}
                data-plasmic-override={overrides.linkSchedule}
                className={classNames("__wab_instance", sty.linkSchedule)}
                memberships={true}
                schedule={true}
              />

              <LinkHalcyon
                data-plasmic-name={"linkPrivates"}
                data-plasmic-override={overrides.linkPrivates}
                className={classNames("__wab_instance", sty.linkPrivates)}
                privates={true}
              />

              <LinkHalcyon
                data-plasmic-name={"linkAboutUs"}
                data-plasmic-override={overrides.linkAboutUs}
                aboutUs={true}
                className={classNames("__wab_instance", sty.linkAboutUs)}
              />

              <LinkHalcyon
                data-plasmic-name={"linkContact"}
                data-plasmic-override={overrides.linkContact}
                className={classNames("__wab_instance", sty.linkContact)}
                contact={true}
              />

              <div className={classNames(projectcss.all, sty.freeBox__xxoyk)}>
                <LinkHalcyon
                  data-plasmic-name={"linkPrivacyPolicy"}
                  data-plasmic-override={overrides.linkPrivacyPolicy}
                  className={classNames(
                    "__wab_instance",
                    sty.linkPrivacyPolicy
                  )}
                  privacyPolicy={true}
                />

                <LinkHalcyon
                  data-plasmic-name={"linkCookiesPolicy"}
                  data-plasmic-override={overrides.linkCookiesPolicy}
                  className={classNames(
                    "__wab_instance",
                    sty.linkCookiesPolicy
                  )}
                  cookiesPolicy={true}
                />

                <LinkHalcyon
                  data-plasmic-name={"linkTermsOfService"}
                  data-plasmic-override={overrides.linkTermsOfService}
                  className={classNames(
                    "__wab_instance",
                    sty.linkTermsOfService
                  )}
                  termsOfService={true}
                />
              </div>
            </Stack__>
            <div className={classNames(projectcss.all, sty.column___7Pz1D)}>
              <h5
                data-plasmic-name={"h5"}
                data-plasmic-override={overrides.h5}
                className={classNames(
                  projectcss.all,
                  projectcss.h5,
                  projectcss.__wab_text,
                  sty.h5
                )}
              >
                {"Gallery"}
              </h5>
              <div className={classNames(projectcss.all, sty.columns__phYzj)}>
                <div className={classNames(projectcss.all, sty.column__qpHSx)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__yA9C)}
                    displayHeight={"80px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/halcyon_updated_site/images/halcyonAngleViewJpg.jpg",
                      fullWidth: 3840,
                      fullHeight: 2160,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__zwHHk)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__etu4T)}
                    displayHeight={"80px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/halcyon_updated_site/images/halcyonZoomedAngleViewJpg.jpg",
                      fullWidth: 3840,
                      fullHeight: 2160,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.columns__wsrdW)}>
                <div className={classNames(projectcss.all, sty.column__v1Iw)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__tx4O)}
                    displayHeight={"80px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/halcyon_updated_site/images/_28Jpg.jpg",
                      fullWidth: 3840,
                      fullHeight: 2160,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__wZ9T8)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img___1YsZg)}
                    displayHeight={"80px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/halcyon_updated_site/images/_24Jpg.jpg",
                      fullWidth: 3840,
                      fullHeight: 2160,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "footerTop",
    "container",
    "button",
    "emailAddressText",
    "modal",
    "embedHtml",
    "instagramIcon",
    "pinterestIcon2",
    "pinterestIcon",
    "twitterIcon",
    "linkHome",
    "linkMemberships",
    "linkSchedule",
    "linkPrivates",
    "linkAboutUs",
    "linkContact",
    "linkPrivacyPolicy",
    "linkCookiesPolicy",
    "linkTermsOfService",
    "h5"
  ],

  footerTop: [
    "footerTop",
    "container",
    "button",
    "emailAddressText",
    "modal",
    "embedHtml",
    "instagramIcon",
    "pinterestIcon2",
    "pinterestIcon",
    "twitterIcon",
    "linkHome",
    "linkMemberships",
    "linkSchedule",
    "linkPrivates",
    "linkAboutUs",
    "linkContact",
    "linkPrivacyPolicy",
    "linkCookiesPolicy",
    "linkTermsOfService",
    "h5"
  ],

  container: [
    "container",
    "button",
    "emailAddressText",
    "modal",
    "embedHtml",
    "instagramIcon",
    "pinterestIcon2",
    "pinterestIcon",
    "twitterIcon",
    "linkHome",
    "linkMemberships",
    "linkSchedule",
    "linkPrivates",
    "linkAboutUs",
    "linkContact",
    "linkPrivacyPolicy",
    "linkCookiesPolicy",
    "linkTermsOfService",
    "h5"
  ],

  button: ["button"],
  emailAddressText: ["emailAddressText"],
  modal: ["modal", "embedHtml"],
  embedHtml: ["embedHtml"],
  instagramIcon: ["instagramIcon"],
  pinterestIcon2: ["pinterestIcon2"],
  pinterestIcon: ["pinterestIcon"],
  twitterIcon: ["twitterIcon"],
  linkHome: ["linkHome"],
  linkMemberships: ["linkMemberships"],
  linkSchedule: ["linkSchedule"],
  linkPrivates: ["linkPrivates"],
  linkAboutUs: ["linkAboutUs"],
  linkContact: ["linkContact"],
  linkPrivacyPolicy: ["linkPrivacyPolicy"],
  linkCookiesPolicy: ["linkCookiesPolicy"],
  linkTermsOfService: ["linkTermsOfService"],
  h5: ["h5"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicFooterHalcyon__ArgProps,
          internalVariantPropNames: PlasmicFooterHalcyon__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicFooterHalcyon__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFooterHalcyon";
  } else {
    func.displayName = `PlasmicFooterHalcyon.${nodeName}`;
  }
  return func;
}

export const PlasmicFooterHalcyon = Object.assign(
  // Top-level PlasmicFooterHalcyon renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    footerTop: makeNodeComponent("footerTop"),
    container: makeNodeComponent("container"),
    button: makeNodeComponent("button"),
    emailAddressText: makeNodeComponent("emailAddressText"),
    modal: makeNodeComponent("modal"),
    embedHtml: makeNodeComponent("embedHtml"),
    instagramIcon: makeNodeComponent("instagramIcon"),
    pinterestIcon2: makeNodeComponent("pinterestIcon2"),
    pinterestIcon: makeNodeComponent("pinterestIcon"),
    twitterIcon: makeNodeComponent("twitterIcon"),
    linkHome: makeNodeComponent("linkHome"),
    linkMemberships: makeNodeComponent("linkMemberships"),
    linkSchedule: makeNodeComponent("linkSchedule"),
    linkPrivates: makeNodeComponent("linkPrivates"),
    linkAboutUs: makeNodeComponent("linkAboutUs"),
    linkContact: makeNodeComponent("linkContact"),
    linkPrivacyPolicy: makeNodeComponent("linkPrivacyPolicy"),
    linkCookiesPolicy: makeNodeComponent("linkCookiesPolicy"),
    linkTermsOfService: makeNodeComponent("linkTermsOfService"),
    h5: makeNodeComponent("h5"),
    // Metadata about props expected for PlasmicFooterHalcyon
    internalVariantProps: PlasmicFooterHalcyon__VariantProps,
    internalArgProps: PlasmicFooterHalcyon__ArgProps
  }
);

export default PlasmicFooterHalcyon;
/* prettier-ignore-end */
